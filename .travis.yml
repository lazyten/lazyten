## ---------------------------------------------------------------------
##
## Copyright (C) 2016 by the linalgwrap authors
##
## This file is part of linalgwrap.
##
## linalgwrap is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## linalgwrap is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with linalgwrap. If not, see <http://www.gnu.org/licenses/>.
##
## ---------------------------------------------------------------------

language: cpp
sudo: required
dist: trusty

branches:
  except:
    - dev
    - /^dev-.*$/
    - /^dev_.*$/

compiler:
  - clang

install:
  # Make sure rapidcheck and catch are there.
  - git submodule update --init --recursive
  #
  # Install what is needed to add repos:
  - sudo apt-get install -y software-properties-common
  #
  # Repo for clang-3.8:
  - sudo wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
  - sudo add-apt-repository -y "deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.8 main"
  #
  # Repo for newer gcc, libstdc++
  - sudo add-apt-repository -y "ppa:ubuntu-toolchain-r/test"
  #
  # Update and install packages:
  #       - ninja-build as faster build system
  #       - recent clang (clang-3.8)
  #       - wide-spread gcc (g++4.9)
  #       - armadillo library and boost dependance
  - sudo apt-get update
  - sudo apt-get install -y ninja-build g++-4.9 clang-3.8 libarmadillo-dev libboost-dev

env:
  global:
    # Use two cores for the build
    - CORES=2
    #
    # Use a known-to-work rapidcheck seed
    - RC_PARAMS="seed=16920708173099178154 verbose_progress=1 verbose_shrinking=1"
  matrix:
    # build with default clang on Ubuntu Trusty (== clang 3.5) and run release tests
    - CXX_COMPILER="clang++"     CC_COMPILER="clang"     TESTCASE="linalgwrap_tests_RELEASE"
    #
    # build with clang 3.8 and run debug tests
    - CXX_COMPILER="clang++-3.8" CC_COMPILER="clang-3.8" TESTCASE="linalgwrap_tests_DEBUG"
    #
    # build with gcc 4.9 and run release tests
    - CXX_COMPILER="g++-4.9"     CC_COMPILER="gcc-4.9"   TESTCASE="linalgwrap_tests_NONE"

script:
  - mkdir build && cd build
  - cmake -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_C_COMPILER=${CC_COMPILER} -DCMAKE_BUILD_TYPE=DebugRelease -DRC_ENABLE_TESTS=OFF -GNinja ..
  - cmake --build  . -- -j ${CORES}
  - ctest --output-on-failure -R ${TESTCASE}
